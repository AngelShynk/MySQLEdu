CREATE DATABASE UNI_DB;

USE UNI_DB;




-- DROP TABLE IF EXISTS STUDENTS;
CREATE TABLE IF NOT EXISTS STUDENTS
(
	ID VARCHAR(36) PRIMARY KEY,
	FIRST_NAME VARCHAR(200) NOT NULL,
	LAST_NAME VARCHAR(200) NOT NULL,
	EMAIL VARCHAR(200) NOT NULL,
	PHONE VARCHAR(20) NOT NULL,
	COURSE INT,
	EDUCATIONAL_DEGREE VARCHAR(20),
	SPECIALITY VARCHAR(20),
	ACTIVE BOOLEAN
);

-- DROP TABLE IF EXISTS ROOMS;
CREATE TABLE IF NOT EXISTS ROOMS
(
	ID VARCHAR(36) PRIMARY KEY,
	BUILDING VARCHAR(200),
	FLOOR INT,
	NUMBER INT,
	DISPLAY_NAME VARCHAR(200),
	SEATS_NUMBER INT
);

-- DROP TABLE IF EXISTS COURSES;
CREATE TABLE COURSES
(
	ID VARCHAR(36) PRIMARY KEY,
	COURSE_DISPLAY_SHORT_NAME VARCHAR(36),
	COURSE_DISPLAY_FULL_NAME VARCHAR(200),
	COURSE_DESCRIPTION VARCHAR(500),
	LECTURES_NUM INT,
	PRACTICES_NUM INT
);

-- DROP TABLE IF EXISTS INSTRUCTORS;
CREATE TABLE IF NOT EXISTS INSTRUCTORS
(
	ID VARCHAR(36) PRIMARY KEY,
	FIRST_NAME VARCHAR(200),
	LAST_NAME VARCHAR(200),
	EMAIL VARCHAR(200),
	PHONE VARCHAR(20),
	ACTIVE BOOL
);


-- DROP TABLE LESSONS_SCHEDULE;
CREATE TABLE IF NOT EXISTS LESSONS_SCHEDULE
(
	ID INT PRIMARY KEY,
	START_TIME TIME,
	END_TIME TIME
);

-- DROP TABLE INSTRUCTORS_COURSES;
CREATE TABLE IF NOT EXISTS INSTRUCTORS_COURSES(
	INSTRUCTOR_ID VARCHAR(36),
	COURSE_ID VARCHAR(36),
	FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTORS(ID)
	ON DELETE CASCADE,
	FOREIGN KEY (COURSE_ID) REFERENCES COURSES(ID)
	ON DELETE CASCADE
);

-- DROP TABLE IF EXISTS STUDENTS_COURSE_GROUPS;
CREATE TABLE IF NOT EXISTS STUDENTS_COURSE_GROUPS(
ID VARCHAR(36) PRIMARY KEY,
COURSE_ID VARCHAR(36)
);

-- DROP TABLE INSTRUCTORS_COURSES;
CREATE TABLE IF NOT EXISTS STUDENTS_COURSE_GROUP_STUDENTS(
	STUDENT_ID VARCHAR(36),
	GROUP_ID VARCHAR(36),
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENTS(ID)
	ON DELETE CASCADE,
	FOREIGN KEY (GROUP_ID) REFERENCES STUDENTS_COURSE_GROUPS(ID)
	ON DELETE CASCADE
);

-- DROP TABLE IF EXISTS SCHEDULES;
CREATE TABLE IF NOT EXISTS SCHEDULE
(
	ID INT PRIMARY KEY,
	COURSE_ID VARCHAR(36),
	INSTRUCTOR_ID VARCHAR(36),
	STUDENTS_COURSE_GROUP_ID VARCHAR(36),
	WEEK_DAY VARCHAR(20),
	LESSON_SCHEDULE_ID INT,
	ROOM_ID VARCHAR(36),
	
	FOREIGN KEY (COURSE_ID) REFERENCES COURSES(ID),
	FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTORS(ID),
	FOREIGN KEY (STUDENTS_COURSE_GROUP_ID) REFERENCES STUDENTS_COURSE_GROUPS(ID),
	FOREIGN KEY (LESSON_SCHEDULE_ID) REFERENCES LESSONS_SCHEDULE(ID),
	FOREIGN KEY (ROOM_ID) REFERENCES ROOMS(ID),
	
	UNIQUE KEY SCHEDULE_UNIQUE_KEY (COURSE_ID, INSTRUCTOR_ID, STUDENTS_COURSE_GROUP_ID, ROOM_ID)

);

